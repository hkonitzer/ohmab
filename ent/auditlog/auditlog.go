// OHMAB
// Code generated by entc, DO NOT EDIT.

package auditlog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the auditlog type in the database.
	Label = "audit_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUser holds the string denoting the user field in the database.
	FieldUser = "user"
	// FieldAction holds the string denoting the action field in the database.
	FieldAction = "action"
	// FieldEntitySchema holds the string denoting the entity_schema field in the database.
	FieldEntitySchema = "entity_schema"
	// FieldEntityValues holds the string denoting the entity_values field in the database.
	FieldEntityValues = "entity_values"
	// FieldEntityUUID holds the string denoting the entity_uuid field in the database.
	FieldEntityUUID = "entity_uuid"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// Table holds the table name of the auditlog in the database.
	Table = "audit_logs"
)

// Columns holds all SQL columns for auditlog fields.
var Columns = []string{
	FieldID,
	FieldUser,
	FieldAction,
	FieldEntitySchema,
	FieldEntityValues,
	FieldEntityUUID,
	FieldTimestamp,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserValidator is a validator for the "user" field. It is called by the builders before save.
	UserValidator func(string) error
	// ActionValidator is a validator for the "action" field. It is called by the builders before save.
	ActionValidator func(string) error
	// EntitySchemaValidator is a validator for the "entity_schema" field. It is called by the builders before save.
	EntitySchemaValidator func(string) error
	// DefaultTimestamp holds the default value on creation for the "timestamp" field.
	DefaultTimestamp func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the AuditLog queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUser orders the results by the user field.
func ByUser(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUser, opts...).ToFunc()
}

// ByAction orders the results by the action field.
func ByAction(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAction, opts...).ToFunc()
}

// ByEntitySchema orders the results by the entity_schema field.
func ByEntitySchema(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntitySchema, opts...).ToFunc()
}

// ByEntityUUID orders the results by the entity_uuid field.
func ByEntityUUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntityUUID, opts...).ToFunc()
}

// ByTimestamp orders the results by the timestamp field.
func ByTimestamp(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTimestamp, opts...).ToFunc()
}
